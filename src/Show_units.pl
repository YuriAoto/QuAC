#!/bin/usr/perl

use strict;
use warnings;
#use FileHandle;

die "Give the name of units data fle" if (scalar @ARGV < 1);

my $units_data_file = $ARGV[0];
if(scalar @ARGV >= 1){$= = $ARGV[1];}

open (UNI_FILE, "<", $units_data_file) or die "Cannot open $units_data_file: $!";

my %signals_hash;
my $prefix=1;
my $char_pre;
my $value_pre;
my $uni;
my $factor;
my $signal;

print "Units prefix and conversion factors,\n";
print "from file $units_data_file.\n";
print "Generated by $0 at\n\n";

format PREFIX_TOP = 
prefix   value
------   -----
.

format PREFIX = 
@<<<<<  @>>>>>
$char_pre, $value_pre
.

format UNITS_TOP = 
unit          factor                  quant
-----------   -------------------     ---------------------------
.

format UNITS = 
@<<<<<<<<<<   @>>>>>>>>>>>>>>>>>>     @<<<<<<<<<<<<<<<<<<<<<<<<<<
$uni, $factor, $signals_hash{$signal}
.

$~ = "PREFIX";
$^ = "PREFIX_TOP";
$^L = "\n";

while (<UNI_FILE>){

    chomp;

    if(/^!/){
	
	if(/^! signals/){
	    while (<UNI_FILE>){
		(my $sig, my $quant) = split / - /;
		last if(not $quant);
		(my $trash,$sig) = split /! /,$sig;
		$signals_hash{$sig} = $quant;
	    }
	}
	
    }else{
    
        if(/^---/){
            $prefix = 0;
            $~ = "UNITS";
            $^ = "UNITS_TOP";
            $- = 0;
        }else{
            if($prefix){
	        ($char_pre,$value_pre) = split / /;
                $uni = 0;
            }else{
                if($_ and not /^---/){
                    ($uni,$factor,$signal) = split / /;
                    $char_pre = 0;
                }
	    }
        write;
        }
    }

}
